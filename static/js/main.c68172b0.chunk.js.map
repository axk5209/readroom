{"version":3,"sources":["images/AlternateVisual.png","components/LandingPage/Header.js","components/LandingPage/Body.js","components/LandingPage/LandingPage.js","components/ListPage/Header.js","services/news.js","components/ListPage/ListItem.js","components/ListPage/Body.js","components/ListPage/ListPage.js","components/Entry/Entry.js","App.js","serviceWorker.js","index.js","images/HeaderLogo.png"],"names":["module","exports","HeaderLogo","require","useStyles","makeStyles","title","flexGrow","fontWeight","logo","maxWidth","Header","classes","AppBar","position","Toolbar","Link","component","to","src","className","alt","Typography","variant","ISO2Options","ISO2ToName","theme","outerBox","backgroundColor","innerBox","borderColor","borderStyle","borderWidth","borderRadius","selectionText","color","toggleButtons","countrySelection","margin","spacing","minWidth","makeRoomButton","textTransform","fontSize","minHeight","Body","React","useState","category","setCategory","country","setCountry","useEffect","storedCategory","JSON","parse","window","localStorage","getItem","storedCountry","Box","p","Container","align","ToggleButtonGroup","value","onChange","_","newCategory","setItem","stringify","orientation","exclusive","size","ToggleButton","Grid","container","direction","alignItems","justify","item","FormControl","formControl","InputLabel","id","Select","event","newCountry","target","label","map","ISO2Option","index","MenuItem","key","toUpperCase","Button","LandingPage","Fragment","CssBaseline","getTopHeadlines","keywords","page","a","categoryParam","countryParam","keywordsParam","encodeURI","pageParam","apiKeyParam","query","axios","get","response","data","AlternateVisual","card","source","marginBottom","date","img","maxHeight","button","SimpleCard","props","dataReceived","setDataReceived","setSource","setTitle","setDate","description","setDescription","imageSrc","setImageSrc","url","setUrl","name","substr","lastIndexOf","Date","publishedAt","toDateString","urlToImage","py","Card","md","sm","CardContent","fontStyle","xs","CardActions","href","fullWidth","paginationUL","justifyContent","useParams","cardsData","setCardsData","pageCount","setPageCount","currPage","setCurrPage","keywordsInput","setKeywordsInput","keywordsToSearch","setKeywordsToSearch","newsService","newPageCount","Math","ceil","totalResults","articles","initializeContent","handlePageChange","newPage","TextField","newKeywordsInput","pr","pb","onClick","Pagination","count","ul","length","singleCardData","ListItem","ListPage","Entry","path","from","App","basename","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c68172b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AlternateVisual.9a5c5ddb.png\";","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport {AppBar, Toolbar, Typography, Link as LinkTag } from  '@material-ui/core'\n\n\n\nlet HeaderLogo = require('../../images/HeaderLogo.png')\n\nconst useStyles = makeStyles({\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tfontWeight: \"bold\"\n\t},\n\tlogo: {\n\t\tmaxWidth: \"60px\"\n\t}\n})\n\nconst Header = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar position=\"static\" >\n\t\t\t<Toolbar>\n\t\t\t\t<LinkTag component={Link} to=\"/home\">\n\t\t\t\t\t<img src={HeaderLogo} className ={classes.logo} alt = \"logo\"/>\n\t\t\t\t</LinkTag>\n\t\t\t\t<Typography variant=\"h4\" className={classes.title}>\n\t\t\t\t\tead World\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\nexport default Header","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport {\n\tContainer, Typography, Box, InputLabel, MenuItem, FormControl, Select, Grid, Button\n} from '@material-ui/core'\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst ISO2Options = require('../../data/ISO2Options.json')\nconst ISO2ToName = require('../../data/ISO2ToName.json')\n\nconst useStyles = makeStyles((theme) => ({\n\touterBox: {\n\t\tbackgroundColor: \"#fdf7ff\"\n\t\t// border: \"4px dotted blue\",\n\t\t// padding: \"15px\",\n\t\t// borderStyle: \"outset\"\n\t\t// backgroundImage: \"url(https://i.dlpng.com/static/png/6929579_preview.png)\",\n\t\t// backgroundSize: \"1300px 1300px\"\n\t},\n\tinnerBox: {\n\t\tborderColor: \"blue\",\n\t\tborderStyle: \"outset\",\n\t\tborderWidth: \"4px\",\n\t\tborderRadius: \"20px\"\n\t\t// minWidth: \"500px\"\n\t\t// backgroundImage: \"url(https://i.dlpng.com/static/png/6929579_preview.png)\",\n\t\t// backgroundSize: \"1300px 1300px\"\n\t},\n\tselectionText: {\n\t\tflexGrow: 1,\n\t\tfontWeight: \"bold\",\n\t\tcolor: \"indigo\"\n\t},\n\ttoggleButtons: {\n\t\tcolor: \"indigo\",\n\t},\n\n\tcountrySelection: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n\tmakeRoomButton: {\n\t\ttextTransform: \"none\",\n\t\tfontSize: \"30px\",\n\t\tminWidth: '30%',\n\t\tminHeight: '10%'\n\t},\n}))\n\n\nconst Body = () => {\n\tconst classes = useStyles()\n\tconst [category, setCategory] = React.useState('entertainment')\n\n\tconst [country, setCountry] = React.useState(\"us\")\n\n\tReact.useEffect(() => {\n\t\tconst storedCategory = JSON.parse(window.localStorage.getItem('category'))\n\t\tconst storedCountry = JSON.parse(window.localStorage.getItem('country'))\n\t\tstoredCategory && setCategory(storedCategory)\n\t\tstoredCountry && setCountry(storedCountry)\n\t}, [])\n\n\n\n\tconst handleCategoryChange = (_, newCategory) => {\n\t\tsetCategory(newCategory)\n\t\twindow.localStorage.setItem(\"category\", JSON.stringify(newCategory))\n\t}\n\n\tconst handleCountryChange = (event) => {\n\t\tlet newCountry = event.target.value\n\t\tsetCountry(newCountry)\n\t\twindow.localStorage.setItem(\"country\", JSON.stringify(newCountry))\n\t}\n\n\treturn (\n\t\t<Box className={classes.outerBox}>\n\t\t\t<Box p={10} />\n\t\t\t<Container align=\"center\" className={classes.innerBox}>\n\t\t\t\t<Box p={6} />\n\t\t\t\t<Typography variant=\"h4\" className={classes.selectionText}>I would like to read about:</Typography>\n\t\t\t\t<Box p={3} />\n\t\t\t\t<ToggleButtonGroup value={category} onChange={handleCategoryChange} orientation=\"vertical\" exclusive size=\"large\">\n\t\t\t\t\t<ToggleButton value=\"entertainment\" className={classes.toggleButtons}>\n\t\t\t\t\t\tEntertainment\n\t\t\t\t</ToggleButton>\n\t\t\t\t\t<ToggleButton value=\"sports\" className={classes.toggleButtons}>\n\t\t\t\t\t\tSports\n\t\t\t\t</ToggleButton>\n\t\t\t\t\t<ToggleButton value=\"technology\" className={classes.toggleButtons}>\n\t\t\t\t\t\tTechnology\n\t\t\t\t</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t<Box p={3} />\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Box p={1} />\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.selectionText}>\n\t\t\t\t\t\t\tin the country of: &nbsp; &nbsp;\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Box p={1} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl} >\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\tonChange={handleCountryChange}\n\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tISO2Options.map((ISO2Option, index) =>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={ISO2Option}>{ISO2ToName[ISO2Option.toUpperCase()]}</MenuItem>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Box p={3} />\n\t\t\t\t<Button component={Link} to={`/list/${category}/${country}`} variant=\"outlined\" color=\"primary\" size=\"large\" className={classes.makeRoomButton}>\n\t\t\t\t\tStart Reading!\n\t\t\t\t\t</Button>\n\t\t\t\t<Box p={5} />\n\t\t\t</Container>\n\t\t\t<Box p={10} />\n\n\t\t</Box>\n\t)\n}\n\nexport default Body","import React from 'react'\nimport Header from './Header'\nimport Body from './Body'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst LandingPage = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<Header />\n\t\t\t<Body />\n\n\t\t\t\n\t\t</React.Fragment>\n\t)\n}\n\nexport default LandingPage","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport {AppBar, Toolbar, Typography, Link as LinkTag } from  '@material-ui/core'\n\n\n\nlet HeaderLogo = require('../../images/HeaderLogo.png')\n\nconst useStyles = makeStyles({\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tfontWeight: \"bold\"\n\t},\n\tlogo: {\n\t\tmaxWidth: \"60px\"\n\t}\n})\n\nconst Header = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar position=\"static\" >\n\t\t\t<Toolbar>\n\t\t\t\t<LinkTag component={Link} to=\"/home\">\n\t\t\t\t\t<img src={HeaderLogo} className ={classes.logo} alt = \"logo\"/>\n\t\t\t\t</LinkTag>\n\t\t\t\t<Typography variant=\"h4\" className={classes.title}>\n\t\t\t\t\tead World\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\nexport default Header","import axios from 'axios'\nconst apiKey = \"78b9d599c4f94f8fa3afb1a5458928d6\" //need to make this more secure as an environment variable\n\nconst getTopHeadlines = async (category, country, keywords, page) => {\n\tlet topHeadlinesUrl = \"https://newsapi.org/v2/top-headlines?\"\n\tlet categoryParam = `category=${category}&`\n\tlet countryParam = `country=${country}&`\n\tlet keywordsParam = keywords ? `q=${encodeURI(keywords)}&` : \"\"\n\tlet pageParam = `page=${page}&`\n\tlet apiKeyParam = `apiKey=${apiKey}`\n\tlet query = topHeadlinesUrl + countryParam + categoryParam + keywordsParam + pageParam+ apiKeyParam\n\ttry {\n\t\tconst response = await axios.get(query)\t\n\t\treturn response.data\n\t}\n\tcatch (error) {\n\t\treturn null\n\t}\n}\n\nexport default {getTopHeadlines}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nlet AlternateVisual = require('../../images/AlternateVisual.png')\n\nconst useStyles = makeStyles({\n\tcard: {\n\t\tminWidth: 275,\n\t},\n\tsource: {\n\t\tmarginBottom: 16,\n\t\tfontSize: 12,\n\t},\n\ttitle: {\n\t\tfontWeight: \"bold\" \n\t},\n\tdate: {\n\t\tmarginBottom: 12,\n\t},\n\n\timg: {\n\t\tmaxHeight: 140,\n\t},\n\tbutton: {\n\t\tminWidth: \"100%\",\n\t\tbackgroundColor: \"#9e62b269\"\n\t}\n})\n\n\nconst SimpleCard = (props) => {\n\tconst classes = useStyles()\n\tconst [dataReceived, setDataReceived] = React.useState(false)\n\tconst [source, setSource] = React.useState(null)\n\tconst [title, setTitle] = React.useState(null)\n\tconst [date, setDate] = React.useState(null)\n\tconst [description, setDescription] = React.useState(null)\n\tconst [imageSrc, setImageSrc] = React.useState(null)\n\tconst [url, setUrl] = React.useState(null)\n\tReact.useEffect(() => {\n\t\tsetDataReceived(props.data)\n\t\tsetSource(props.data.source.name)\n\t\tsetTitle(props.data.title.substr(0, props.data.title.lastIndexOf(\"-\") - 1))\n\t\tsetDate((new Date(props.data.publishedAt)).toDateString())\n\t\tsetDescription(props.data.description ? `${props.data.description}` : \"\\n\")\n\t\tsetImageSrc(props.data.urlToImage ? props.data.urlToImage : AlternateVisual)\n\t\tsetUrl(props.data.url)\n\t}, [props.data])\n\n\treturn (\n\t\t<Box py={5}>\n\t\t\t{\n\t\t\t\tdataReceived &&\n\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item md={8} sm={7}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography className={classes.source} color=\"textSecondary\"> {source} </Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className = {classes.title}> {title} </Typography>\n\t\t\t\t\t\t\t\t<Typography className={classes.date} color=\"textSecondary\" > {date}</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"span\">\n\t\t\t\t\t\t\t\t\t\t<Box fontStyle=\"italic\">\n\t\t\t\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item container md={4} sm={5} align=\"center\" justify = \"center\">\n\t\t\t\t\t\t\t<Box py={4}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName={classes.img}\n\t\t\t\t\t\t\t\t\talt=\"Article Visual\"\n\t\t\t\t\t\t\t\t\tsrc={imageSrc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} align=\"center\">\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button size=\"large\" href={url} fullWidth className = {classes.button}>Read More</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Card>\n\t\t\t}\n\n\t\t</Box>\n\t)\n}\n\nexport default SimpleCard\n","import React from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Box, Grid, TextField, Button, Typography } from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination'\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport newsService from \"../../services/news\"\nimport ListItem from \"./ListItem\"\n\nconst devMode = false\nconst useStyles = makeStyles({\n\tpaginationUL: {\n\t\tjustifyContent: \"center\",\n\t\tcolor: \"red\"\n\t},\n\touterBox: {\n\t\tbackgroundColor: \"#fdf7ff\"\n\t},\n})\n\nconst Body = () => {\n\tconst classes = useStyles()\n\tconst category = useParams().category\n\tconst country = useParams().country\n\tconst [cardsData, setCardsData] = React.useState(null)\n\tconst [pageCount, setPageCount] = React.useState(0)\n\tconst [currPage, setCurrPage] = React.useState(1)\n\tconst [keywordsInput, setKeywordsInput] = React.useState(\"\")\n\tconst [keywordsToSearch, setKeywordsToSearch] = React.useState(\"\")\n\n\n\tReact.useEffect(() => {\n\t\tasync function initializeContent() {\n\t\t\tlet data = devMode ? { articles: [], totalResults: 0 } : await newsService.getTopHeadlines(category, country, keywordsToSearch, currPage)\n\t\t\tconst newPageCount = Math.ceil(data.totalResults / 20)\n\t\t\tsetPageCount(newPageCount)\n\t\t\tsetCardsData(data.articles)\n\t\t}\n\t\tinitializeContent()\n\t}, [category, country, currPage, keywordsToSearch])\n\n\tconst handlePageChange = (_, newPage) => {\n\t\tsetCurrPage(newPage)\n\t}\n\tconst handleKeywordsChange = (event) => {\n\t\tlet newKeywordsInput = event.target.value\n\t\tsetKeywordsInput(newKeywordsInput)\n\t}\n\tconst handleSearchButtonClick = () => {\n\t\tsetKeywordsToSearch(keywordsInput)\n\t\tsetKeywordsInput(\"\")\n\n\t}\n\n\treturn (\n\t\t<Box className={classes.outerBox}>\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<Box p={6} />\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"standard-read-only-input\"\n\t\t\t\t\t\t\tlabel=\"Keywords:\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tvalue = {keywordsInput}\n\t\t\t\t\t\t\tonChange={handleKeywordsChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Box pr={4} />\n\t\t\t\t\t<Box pb={4} />\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tonClick={handleSearchButtonClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Box p={6} />\n\t\t\t\t{\n\t\t\t\t\tpageCount > 0 && (\n\t\t\t\t\t\t<Pagination count={pageCount} color=\"primary\" size=\"large\" classes={{ ul: classes.paginationUL }} page={currPage} onChange={handlePageChange} />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tcardsData &&\n\t\t\t\t\t(cardsData.length > 0 ?\n\t\t\t\t\t\tcardsData.map((singleCardData, index) => <ListItem data={singleCardData} key={index} />) :\n\t\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">Sorry, there are no articles which match your criteria</Typography>)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tpageCount > 0 && (\n\t\t\t\t\t\t<Pagination count={pageCount} color=\"primary\" size=\"large\" classes={{ ul: classes.paginationUL }} page={currPage} onChange={handlePageChange} />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t<Box p={6} />\n\t\t\t</Container>\n\t\t\t<Box p = {10} />\n\t\t</Box >\n\t)\n}\n\nexport default Body","import React from 'react'\nimport Header from './Header'\nimport Body from './Body'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst ListPage = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<Header />\n\t\t\t<Body />\n\n\t\t\t\n\t\t</React.Fragment>\n\t)\n}\n\nexport default ListPage","import React from 'react'\nimport {\n\tSwitch, Route, Redirect\n} from \"react-router-dom\"\nimport LandingPage from '../LandingPage/LandingPage'\nimport ListPage from '../ListPage/ListPage'\n\nconst Entry = () => {\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/home\">\n\t\t\t\t<LandingPage />\n\t\t\t</Route>\n\t\t\t<Route path=\"/list/:category/:country\">\n\t\t\t\t<ListPage />\n\t\t\t</Route>\n\t\t\t<Redirect from=\"/\" to=\"/home\" />\n\t\t</Switch>\n\t)\n}\n\nexport default Entry","import React from 'react'\nimport Entry from './components/Entry/Entry'\nimport {\n\tHashRouter\n} from \"react-router-dom\"\n\nfunction App() {\n  return (\n      \t<HashRouter basename = '/'>\n\t\t\t<Entry />\n\t\t</HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/HeaderLogo.4175f600.png\";"],"sourceRoot":""}